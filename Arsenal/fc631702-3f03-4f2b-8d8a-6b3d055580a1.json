{
    "name": "Podman Container and Resource Discovery",
    "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment.",
    "supported_platforms": [
        "containers"
    ],
    "dependency_executor_name": "sh",
    "executor": {
        "command": "podman build -t t1613 $PathtoAtomicsFolder/T1613/src/\npodman run --name t1613_container -d -t t1613\npodman ps\npodman stats --no-stream\npodman inspect $(podman ps -l -q --filter ancestor=t1613)",
        "cleanup_command": "podman stop t1613_container\npodman rmi -f t1613_container",
        "name": "sh",
        "type": "Command Executor"
    },
    "id": "T1613",
    "tactics": [
        "Discovery"
    ],
    "technique": "Container and Resource Discovery",
    "source": "ART",
    "uuid": "fc631702-3f03-4f2b-8d8a-6b3d055580a1",
    "arguments": null,
    "preconditions": [
        {
            "description": "Verify Podman is installed.",
            "prereq_command": "which podman\n",
            "get_prereq_command": "if [ \"\" == \"`which podman`\" ]; then echo \"Podman Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install podman ; elif [ -n \"`which yum`\" ]; then sudo yum -y install podman ; elif [ -n \"`which pacman`\" ]; then sudo pacman -Sy podman --noconfirm ; elif [ -n \"`which brew`\" ]; then brew install podman ; else echo \"Unsupported package manager\"; fi ; else echo \"Podman installed\"; fi        \n"
        },
        {
            "description": "Verify Podman service is running.",
            "prereq_command": "sudo systemctl status podman --no-pager\n",
            "get_prereq_command": "sudo systemctl start podman \n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}