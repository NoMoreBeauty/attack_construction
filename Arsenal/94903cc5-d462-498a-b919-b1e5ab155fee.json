{
    "name": "Process Hollowing in Go using CreateProcessW and CreatePipe WinAPIs (T1055.012)",
    "description": "Create a process in a suspended state, execute shellcode to spawn calc.exe in a child process, and then resume the original process. This test uses the CreatePipe function to create an anonymous pipe that parent and child processes can communicate over. This anonymous pipe allows for the retrieval of output generated from executed shellcode. - PoC Credit: (https://github.com/Ne0nd0g/go-shellcode#createprocesswithpipe) ",
    "supported_platforms": [
        "windows"
    ],
    "executor": {
        "name": "powershell",
        "elevation_required": false,
        "command": "$PathToAtomicsFolder\\T1055.012\\bin\\x64\\CreateProcessWithPipe.exe -program \"#{hollow_binary_path}\" -debug\n",
        "cleanup_command": "Stop-Process -Name CalculatorApp -ErrorAction SilentlyContinue\nStop-Process -Name \"#{hollow_process_name}\" -ErrorAction SilentlyContinue",
        "type": "Command Executor"
    },
    "id": "T1055.012",
    "tactics": [
        "Privilege Escalation",
        "Defense Evasion"
    ],
    "technique": "Process Hollowing",
    "source": "ART",
    "uuid": "94903cc5-d462-498a-b919-b1e5ab155fee",
    "arguments": {
        "hollow_binary_path": {
            "description": "Path of the binary to hollow",
            "type": "string",
            "default": "C:\\Windows\\System32\\werfault.exe"
        },
        "hollow_process_name": {
            "description": "Name of the process to hollow",
            "type": "string",
            "default": "werfault"
        }
    },
    "preconditions": [],
    "infrastructure_requirement": [],
    "side": "Victim"
}