{
    "name": "List Open Egress Ports",
    "description": "This is to test for what ports are open outbound.  The technique used was taken from the following blog: https://www.blackhillsinfosec.com/poking-holes-in-the-firewall-egress-testing-with-allports-exposed/  Upon successful execution, powershell will read top-128.txt (ports) and contact each port to confirm if open or not. Output will be to Desktop\\open-ports.txt. ",
    "supported_platforms": [
        "windows"
    ],
    "dependency_executor_name": "powershell",
    "executor": {
        "command": "$ports = Get-content \"#{port_file}\"\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n",
        "cleanup_command": "Remove-Item -ErrorAction ignore \"#{output_file}\"\n",
        "name": "powershell",
        "type": "Command Executor"
    },
    "id": "T1016",
    "tactics": [
        "Discovery"
    ],
    "technique": "System Network Configuration Discovery",
    "source": "ART",
    "uuid": "4b467538-f102-491d-ace7-ed487b853bf5",
    "arguments": {
        "output_file": {
            "description": "Path of file to write port scan results",
            "type": "path",
            "default": "$env:USERPROFILE\\Desktop\\open-ports.txt"
        },
        "portfile_url": {
            "description": "URL to top-128.txt",
            "type": "url",
            "default": "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1016/src/top-128.txt"
        },
        "port_file": {
            "description": "The path to a text file containing ports to be scanned, one port per line. The default list uses the top 128 ports as defined by Nmap.",
            "type": "path",
            "default": "PathToAtomicsFolder\\T1016\\src\\top-128.txt"
        }
    },
    "preconditions": [
        {
            "description": "Test requires #{port_file} to exist\n",
            "prereq_command": "if (Test-Path \"#{port_file}\") {exit 0} else {exit 1}\n",
            "get_prereq_command": "New-Item -Type Directory (split-path \"#{port_file}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"#{portfile_url}\" -OutFile \"#{port_file}\"\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}