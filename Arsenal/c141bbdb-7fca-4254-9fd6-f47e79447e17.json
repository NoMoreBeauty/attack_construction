{
    "name": "System Network Configuration Discovery",
    "description": "Identify network configuration information. Upon successful execution, sh will spawn multiple commands and output will be via stdout. ",
    "supported_platforms": [
        "macos",
        "linux"
    ],
    "dependency_executor_name": "sh",
    "executor": {
        "command": "if [ \"$(uname)\" = 'FreeBSD' ]; then cmd=\"netstat -Sp tcp\"; else cmd=\"netstat -ant\"; fi;\nif [ -x \"$(command -v arp)\" ]; then arp -a; else echo \"arp is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v ifconfig)\" ]; then ifconfig; else echo \"ifconfig is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v ip)\" ]; then ip addr; else echo \"ip is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v netstat)\" ]; then $cmd | awk '{print $NF}' | grep -v '[[:lower:]]' | sort | uniq -c; else echo \"netstat is missing from the machine. skipping...\"; fi;\n",
        "name": "sh",
        "type": "Command Executor"
    },
    "id": "T1016",
    "tactics": [
        "Discovery"
    ],
    "technique": "System Network Configuration Discovery",
    "source": "ART",
    "uuid": "c141bbdb-7fca-4254-9fd6-f47e79447e17",
    "arguments": null,
    "preconditions": [
        {
            "description": "Check if arp command exists on the machine\n",
            "prereq_command": "if [ -x \"$(command -v arp)\" ]; then exit 0; else exit 1; fi;\n",
            "get_prereq_command": "(which yum && yum -y install net-tools)||(which apt-get && DEBIAN_FRONTEND=noninteractive apt-get install -y net-tools)\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}