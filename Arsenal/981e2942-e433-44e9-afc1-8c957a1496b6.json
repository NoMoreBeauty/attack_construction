{
    "name": "Service Installation CMD",
    "description": "Download an executable from github and start it as a service. Upon successful execution, powershell will download `AtomicService.exe` from github. cmd.exe will spawn sc.exe which will create and start the service. Results will output via stdout. ",
    "supported_platforms": [
        "windows"
    ],
    "dependency_executor_name": "powershell",
    "executor": {
        "name": "command_prompt",
        "elevation_required": true,
        "command": "sc.exe create #{service_name} binPath= \"#{binary_path}\" start=#{startup_type}  type=#{service_type}\nsc.exe start #{service_name}\n",
        "cleanup_command": "sc.exe stop #{service_name} >nul 2>&1\nsc.exe delete #{service_name} >nul 2>&1\n",
        "type": "Command Executor"
    },
    "id": "T1543.003",
    "tactics": [
        "Persistence",
        "Privilege Escalation"
    ],
    "technique": "Windows Service",
    "source": "ART",
    "uuid": "981e2942-e433-44e9-afc1-8c957a1496b6",
    "arguments": {
        "binary_path": {
            "description": "Name of the service binary, include path.",
            "type": "path",
            "default": "PathToAtomicsFolder\\T1543.003\\bin\\AtomicService.exe"
        },
        "service_type": {
            "description": "Type of service. May be own|share|interact|kernel|filesys|rec|userown|usershare",
            "type": "string",
            "default": "Own"
        },
        "startup_type": {
            "description": "Service start method. May be boot|system|auto|demand|disabled|delayed-auto",
            "type": "string",
            "default": "auto"
        },
        "service_name": {
            "description": "Name of the Service",
            "type": "string",
            "default": "AtomicTestService_CMD"
        }
    },
    "preconditions": [
        {
            "description": "Service binary must exist on disk at specified location (#{binary_path})\n",
            "prereq_command": "if (Test-Path \"#{binary_path}\") {exit 0} else {exit 1}\n",
            "get_prereq_command": "New-Item -Type Directory (split-path \"#{binary_path}\") -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1543.003/bin/AtomicService.exe\" -OutFile \"#{binary_path}\"\n"
        }
    ],
    "infrastructure_requirement": [],
    "side": "Victim"
}